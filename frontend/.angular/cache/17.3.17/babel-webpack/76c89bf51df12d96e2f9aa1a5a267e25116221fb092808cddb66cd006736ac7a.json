{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/api';\n  }\n  getAllTasks() {\n    return this.http.get(`${this.apiUrl}/tasks`);\n  }\n  createTask(task) {\n    return this.http.post(`${this.apiUrl}/tasks`, task);\n  }\n  updateTask(id, task) {\n    return this.http.put(`${this.apiUrl}/tasks/${id}`, task);\n  }\n  deleteTask(id) {\n    return this.http.delete(`${this.apiUrl}/tasks/${id}`);\n  }\n  static {\n    this.ɵfac = function TaskService_Factory(t) {\n      return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TaskService,\n      factory: TaskService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["TaskService","constructor","http","apiUrl","getAllTasks","get","createTask","task","post","updateTask","id","put","deleteTask","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\user\\Documents\\project 1\\frontend\\src\\app\\services\\task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Task, TaskResponse } from '../models/task.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n  private apiUrl = 'http://localhost:3000/api';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllTasks(): Observable<TaskResponse> {\r\n    return this.http.get<TaskResponse>(`${this.apiUrl}/tasks`);\r\n  }\r\n\r\n  createTask(task: Omit<Task, 'id' | 'createdAt' | 'updatedAt'>): Observable<TaskResponse> {\r\n    return this.http.post<TaskResponse>(`${this.apiUrl}/tasks`, task);\r\n  }\r\n\r\n  updateTask(id: number, task: Partial<Task>): Observable<TaskResponse> {\r\n    return this.http.put<TaskResponse>(`${this.apiUrl}/tasks/${id}`, task);\r\n  }\r\n\r\n  deleteTask(id: number): Observable<TaskResponse> {\r\n    return this.http.delete<TaskResponse>(`${this.apiUrl}/tasks/${id}`);\r\n  }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,2BAA2B;EAEL;EAEvCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAe,GAAG,IAAI,CAACF,MAAM,QAAQ,CAAC;EAC5D;EAEAG,UAAUA,CAACC,IAAkD;IAC3D,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAe,GAAG,IAAI,CAACL,MAAM,QAAQ,EAAEI,IAAI,CAAC;EACnE;EAEAE,UAAUA,CAACC,EAAU,EAAEH,IAAmB;IACxC,OAAO,IAAI,CAACL,IAAI,CAACS,GAAG,CAAe,GAAG,IAAI,CAACR,MAAM,UAAUO,EAAE,EAAE,EAAEH,IAAI,CAAC;EACxE;EAEAK,UAAUA,CAACF,EAAU;IACnB,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAe,GAAG,IAAI,CAACV,MAAM,UAAUO,EAAE,EAAE,CAAC;EACrE;;;uBAnBWV,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXjB,WAAW;MAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}